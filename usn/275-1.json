{
  "description": "Web pages with extremely long titles caused subsequent launches of\nMozilla browser to hang for up to a few minutes, or caused Mozilla to\ncrash on computers with\tinsufficient memory. (CVE-2005-4134)\n\nIgor Bukanov discovered that the JavaScript engine did not properly\ndeclare some temporary variables. Under some rare circumstances, a\nmalicious website could exploit this to execute arbitrary code with\nthe privileges of the user. (CVE-2006-0292, CVE-2006-1742)\n\nThe function XULDocument.persist() did not sufficiently validate the\nnames of attributes. An attacker could exploit this to inject\narbitrary XML code into the file 'localstore.rdf', which is read and\nevaluated at startup. This could include JavaScript commands that\nwould be run with the user's privileges. (CVE-2006-0296)\n\nDue to a flaw in the HTML tag parser a specific sequence of HTML tags\ncaused memory corruption. A malicious web site could exploit this to\ncrash the browser or even execute arbitrary code with the user's\nprivileges. (CVE-2006-0748)\n\nAn invalid ordering of table-related tags caused Mozilla to use a\nnegative array index. A malicious website could exploit this to\nexecute arbitrary code with the privileges of the user.\n(CVE-2006-0749)\n\nGeorgi Guninski discovered that embedded XBL scripts of web sites\ncould escalate their (normally reduced) privileges to get full\nprivileges of the user if that page is viewed with \"Print Preview\".\n(CVE-2006-1727)\n\nThe crypto.generateCRMFRequest() function had a flaw which could be\nexploited to run arbitrary code with the user's privileges.\n(CVE-2006-1728)\n\nClaus J\u00f8rgensen and Jesse Ruderman discovered that a text input box\ncould be pre-filled with a filename and then turned into a file-upload\ncontrol with the contents intact. A malicious web site could exploit\nthis to read any local file the user has read privileges for.\n(CVE-2006-1729)\n\nAn integer overflow was detected in the handling of the CSS property\n\"letter-spacing\". A malicious web site could exploit this to run\narbitrary code with the user's privileges. (CVE-2006-1730)\n\nThe methods valueOf.call() and .valueOf.apply() returned an object\nwhose privileges were not properly confined to those of the caller,\nwhich made them vulnerable to cross-site scripting attacks. A\nmalicious web site could exploit this to modify the contents or steal\nconfidential data (such as passwords) from other opened web pages.\n(CVE-2006-1731) The window.controllers array variable (CVE-2006-1732)\nand event handlers (CVE-2006-1741) were vulnerable to a similar attack. \n\nThe privileged built-in XBL bindings were not fully protected from web\ncontent and could be accessed by calling valueOf.call() and\nvalueOf.apply() on a method of that binding. A malicious web site\ncould exploit this to run arbitrary JavaScript code with the user's\nprivileges. (CVE-2006-1733)\n\nIt was possible to use the Object.watch() method to access an internal\nfunction object (the \"clone parent\"). A malicious web site could\nexploit this to execute arbitrary JavaScript code with the user's\nprivileges. (CVE-2006-1734)\n\nBy calling the XBL.method.eval() method in a special way it was\npossible to create JavaScript functions that would get compiled with\nthe wrong privileges. A malicious web site could exploit this to\nexecute arbitrary JavaScript code with the user's privileges.\n(CVE-2006-1735)\n\nMichael Krax discovered that by layering a transparent image link to\nan executable on top of a visible (and presumably desirable) image a\nmalicious site could fool the user to right-click and choose \"Save\nimage as...\" from the context menu, which would download the\nexecutable instead of the image. (CVE-2006-1736)\n\nSeveral crashes have been fixed which could be triggered by web sites\nand involve memory corruption. These could potentially be exploited to\nexecute arbitrary code with the user's privileges. (CVE-2006-1737,\nCVE-2006-1738, CVE-2006-1739, CVE-2006-1790)\n\nIf the user has turned on the \"Entering secure site\" modal warning\ndialog, it was possible to spoof the browser's secure-site indicators\n(the lock icon and the gold URL field background) by first loading the\ntarget secure site in a pop-up window, then changing its location to a\ndifferent site, which retained the displayed secure-browsing\nindicators from the original site. (CVE-2006-1740)",
  "releases": {
    "warty": {
      "binaries": {
        "mozilla-psm": {
          "version": ""
        },
        "mozilla-mailnews": {
          "version": ""
        },
        "mozilla-browser": {
          "version": ""
        }
      }
    },
    "hoary": {
      "binaries": {
        "mozilla-psm": {
          "version": ""
        },
        "mozilla-mailnews": {
          "version": ""
        },
        "mozilla-browser": {
          "version": ""
        }
      }
    },
    "breezy": {
      "binaries": {
        "mozilla-psm": {
          "version": ""
        },
        "mozilla-mailnews": {
          "version": ""
        },
        "mozilla-browser": {
          "version": ""
        }
      }
    }
  },
  "title": "Mozilla vulnerabilities",
  "timestamp": 1146206557,
  "summary": "mozilla vulnerabilities",
  "id": "USN-275-1",
  "cves": [
    "CVE-2005-4134",
    "CVE-2006-0292",
    "CVE-2006-0296",
    "CVE-2006-0748",
    "CVE-2006-0749",
    "CVE-2006-1727",
    "CVE-2006-1728",
    "CVE-2006-1729",
    "CVE-2006-1730",
    "CVE-2006-1731",
    "CVE-2006-1732",
    "CVE-2006-1733",
    "CVE-2006-1734",
    "CVE-2006-1735",
    "CVE-2006-1736",
    "CVE-2006-1737",
    "CVE-2006-1738",
    "CVE-2006-1739",
    "CVE-2006-1740",
    "CVE-2006-1741",
    "CVE-2006-1742",
    "CVE-2006-1790"
  ]
}